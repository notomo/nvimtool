
call themis#option('recursive', 1)

let s:root = getcwd()

function! NvimToolTestHelper() abort
    let helper = {
        \ 'before_each': function('s:before_each'),
        \ 'after_each': function('s:after_each'),
    \ }

    function! helper.suite(name) abort
        let suite = themis#suite(a:name)
        let suite.before_each = self.before_each
        let suite.after_each = self.after_each
        return suite
    endfunction

    function! helper.assert() abort
        return s:assert()
    endfunction

    return helper
endfunction

function! s:assert() abort
    let assert = themis#helper('assert')

    function! assert.window_count(expected) abort
        let actual = tabpagewinnr(tabpagenr(), '$')
        let message = printf('window count must be %s, but actual: %s', a:expected, actual)
        call self.equals(actual, a:expected, message)
    endfunction

    function! assert.window_row(expected) abort
        let actual = nvim_win_get_config(0).row
        let message = printf('row must be %s, but actual: %s', a:expected, actual)
        call self.equals(actual, a:expected, message)
    endfunction

    function! assert.window_col(expected) abort
        let actual = nvim_win_get_config(0).col
        let message = printf('col must be %s, but actual: %s', a:expected, actual)
        call self.equals(actual, a:expected, message)
    endfunction

    return assert
endfunction

function! s:before_each() abort
    execute 'cd' s:root

    call themis#log('')

    filetype on
    syntax enable
endfunction

function! s:after_each() abort
    silent! %bwipeout!
    execute 'cd' s:root

    filetype off
    syntax off
endfunction
